@model FileTracking.ViewModels.VolumesViewModel
@{
    ViewBag.Title = "FileVolume";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>File Volume</strong></h2>
       
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <p style="color: chocolate"><i>Volumes listed here are for the file record below:</i></p>
    <div class="col-lg-4">
        <ul class="list-group">
            <li class="list-group-item">
                <span class="badge"><i class="fa fa-list-alt"></i></span>
                <strong>File Number:</strong> @Model.File.FileNumber
            </li>
            <li class="list-group-item">
                <span class="badge"><i class="fa fa-user"></i></span>
                <strong> Client:</strong> @Model.File.FullName
            </li>
            <li class="list-group-item">
                <span class="badge"><i class="fa fa-volume-up"></i></span>
                <strong> Volume's Total: </strong>@Model.File.Volume
            </li>
        </ul>
    </div>

    <table id="registryVolumeTable" user-loc="@Model.AdUser.BranchesId" class="table  table-bordered table-hover">
        <thead>
            <tr class="row100 head">
                <th>Volume</th>
                <th width="150">Comment</th>
                <th>State</th>
                <th><i class="glyphicon glyphicon-home"></i> Location Origin</th>
                <th><i class="glyphicon glyphicon-map-marker"></i> Current location</th>
                <th><i class="glyphicon glyphicon-user"></i> Holder</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var fileVol in Model.FileVolumes)
            {
                <tr>
                    <td>@fileVol.Volume</td>
                    @if (fileVol.Comment == null)
                    {
                        <td>Comment not provided</td>
                    }
                    else
                    {
                        <td>@fileVol.Comment</td>
                    }
                    <td class="tdState">@fileVol.States.State</td>
                    <td>@fileVol.Branches.Branch</td>
                    <td>@fileVol.CurrentLocation.Branch</td>
                    @if (fileVol.AdUserId == null)
                    {
                        <td>At registry</td>
                    }
                    else
                    {
                        <td>@fileVol.AdUser.Name</td>
                    }
                        <td class="tdBtn">
                            <button vol-data-id="@fileVol.Id" file-name="@Model.File.FirstName" vol-num-attr="@fileVol.Volume" class="btn btn-circle js-edit-vol" data-toggle="tooltip" data-placement="top" title="Update Description">
                                <i class="glyphicon glyphicon-pencil"></i>
                            </button> |
                            <button class="btn btn-circle history-js" vol-id-attr="@fileVol.Id" data-toggle="tooltip" data-placement="top" title="Volume's History"><i class="fa fa-history"></i></button> |
                            <button class="btn btn-circle changeBranch-js" vol-changeBranchId="@fileVol.Id" vol-num-editBranch="@fileVol.Volume" state-editBranch="@fileVol.StatesId" data-toggle="tooltip" data-placement="top" title="Change Branch"><i class="fa fa-location-arrow"></i></button> |
                            @if (fileVol.AdUserId != null)
                            {
                                var userWithFile = fileVol.AdUser.Name;
                                <button class="btn btn-circle reclaimFile-js" vol-reclaimFileId="@fileVol.Id" vol-num-reclaimFile="@fileVol.Volume" volBranch="@fileVol.BranchesId" state-reclaim="@fileVol.StatesId" user-reclaim="@userWithFile" data-toggle="tooltip" data-placement="top" title="Reclaim File"><i class="fa fa-refresh"></i></button>
                            }
                            else
                            {
                                <button class="btn btn-circle reclaimFile-js" vol-reclaimFileId="@fileVol.Id" vol-num-reclaimFile="@fileVol.Volume" volBranch="@fileVol.BranchesId" state-reclaim="@fileVol.StatesId" data-toggle="tooltip" data-placement="top" title="Reclaim File"><i class="fa fa-refresh"></i></button>
                            }


                        </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="modal fade" id="volumeEditModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog">
            <div class="modal-content" id="volEditModelContent">
            </div>
        </div>
    </div>
    <!--Change file volume modal trigger-->
    <div class="modal fade" id="changeBranchModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog">
            <div class="modal-content" id="changeBranchModelContent">
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {
            // var userLocId = $("#registryVolumeTable").attr("user-loc");
            // alert(userLocation);
            $("#registryVolumeTable").on("click",
                ".js-edit-vol",
                function() {
                    var volNum = $(this).attr("vol-num-attr");
                    var volId = $(this).attr("vol-data-id");
                    bootbox.confirm("Are you sure you want to edit this volume's <strong>" + volNum + "</strong> ?",
                        function(result) {
                            if (result) {
                                var url = siteURL + "/FileVolumes/UpdateVolumeDescription/" + volId;
                                // alert(url);
                                $('#volEditModelContent').load(url);
                                $('#volumeEditModal').modal('show');
                            }
                        });

                });
            //button that will display recent activities for volume
            $("#registryVolumeTable").on("click",
                ".history-js",
                function() {
                    var volId = $(this).attr("vol-id-attr");
                    bootbox.alert({
                        message: "Currently Remodeling",
                        callback: function(result) {
                            if (result) {
                                /* var url = siteURL + "/FileVolumes/VolumeHistory/" + volId + "/" + 1 + "/" + 5;
                                 window.location.href = url;*/

                            }

                        }
                    });

                });
            //change branch clicked
            $("#registryVolumeTable").on("click",
                ".changeBranch-js",
                function() {
                    var btn = $(this);
                    var volId = btn.attr("vol-changeBranchId");
                    var volNum = btn.attr("vol-num-editBranch");
                    var state = btn.attr("state-editBranch");
                    //state must be at stored with no requests
                    if (state != 1) {
                        toastr.error("State is not stored. Either in transfer or checked-out state. Try again later.",
                            "Invalid State!",
                            { positionClass: "toast-bottom-right" });
                    } else {
                        bootbox.confirm({
                            title: `<strong>CHANGE BRANCH</strong>`,
                            message: `You are about change the branch origins for <strong>volume ${volNum
                                }</strong> of this file. Continue?`,
                            callback: function(result) {
                                if (result) {
                                    $.ajax({
                                        url: siteURL + '/Files/CheckForVolumeRequestActivity/' + volId,
                                        success: function(response) {
                                            if (response.success) {
                                                var url = siteURL + "/Files/ChangeVolumeBranch/" + volId;
                                                //alert(url);
                                                $('#changeBranchModelContent').load(url);
                                                $('#changeBranchModal').modal('show');
                                            } else {
                                                toastr.error(response.message,
                                                    "Can't proceed",
                                                    { positionClass: "toast-bottom-right" });
                                            }

                                        },
                                        statusCode: {
                                            404: function(content) { alert('cannot find resource'); },
                                            500: function(content) { alert('internal server error'); }
                                        }
                                    });
                                }
                            }
                        });
                    }

                });

            //reclaim file action
            $("#registryVolumeTable").on("click",
                ".reclaimFile-js",
                function() {
                    var btn = $(this);
                    let stateId = btn.attr("state-reclaim");
                    let user = btn.attr("user-reclaim");
                    let volId = btn.attr("vol-reclaimFileId");
                    let userInSessionBranch = $("#registryVolumeTable").attr("user-loc");
                    let volBranchId = btn.attr("volBranch");

                    if (userInSessionBranch != volBranchId)
                        toastr.error("Your branch does not match the volume's branch.","Cannot perform action!",{ positionClass: "toast-bottom-right" });
                    else {
                        if (stateId == 5) {
                            bootbox.confirm({
                                title: "<strong>RECLAIM FILE</strong>",
                                message: `You are reclaiming this file from ${user
                                    }. Ensure that you currently have the file before proceeding.`,
                                buttons: {
                                    confirm: {
                                        label: 'Yes, I have the file in hand.',
                                        className: 'btn-success'
                                    },
                                    cancel: {
                                        label: 'Cancel',
                                        className: 'btn-danger'
                                    }
                                },
                                callback: function (result) {
                                    if (result) {
                                        $.ajax({
                                            url: siteURL + '/FileVolumes/ReclaimFileVolume/' + volId,
                                            success: function (response) {
                                                if (response.success) {
                                                    toastr.success(response.message,
                                                        "Reclaim",
                                                        { positionClass: "toast-bottom-right" });
                                                    alert("Reload Required");
                                                    location.reload();
                                                } else {
                                                    toastr.error(response.message,
                                                        "Can't Reclaim",
                                                        { positionClass: "toast-bottom-right" });
                                                }

                                            },
                                            statusCode: {
                                                404: function (content) { alert('cannot find resource'); },
                                                500: function (content) { alert('internal server error'); }
                                            }
                                        });
                                    }
                                }
                            });
                        } else {
                            toastr.error(
                                "It appears this volume is stored at your registry. Must be in possession of a another user.",
                                "Cannot perform action!",
                                { positionClass: "toast-bottom-right" });
                        }
                    }
                    
                });
        });
    </script>
}
