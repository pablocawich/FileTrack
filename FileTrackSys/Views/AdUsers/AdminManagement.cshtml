@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "AdminManagement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>Admin Management</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="row" style="height: 65px">
    <label style="color: #5d5d96"><i>Please select a view below to further perform an action:</i> </label><br>
    <a href="#" class='btn btn-xs' id="addAdBtn"><i class='glyphicon glyphicon-level-up'></i> Add From Directory</a>
    <a href="#" class='btn btn-xs' id="editFromDb"><i class='fa fa-database'></i> View Users</a>
</div>

<p hidden data-username="@User.Identity.Name" id="uname"></p>
<div class="row" id="AdRow">
    <table id="adminTableAD" class="table table-hover table-striped table-bordered">
        <thead>
            <tr>

                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Username</th>
                <th scope="col">Branch</th>
                <th scope="col">Role</th>

            </tr>
        </thead>
        <tbody></tbody>

    </table>
    <button class="btn btn-success" id="addToDbBtn">Add to DB</button>
</div>
<div class="row" id="DbRow">
    <div class="row" style="text-align: left; height: 45px;vertical-align: top">
        <div class="col-md-4">
            <label style="color: orange"><strong>Perform Action:</strong></label>
            <button class="btn btn-danger" id="delBtn"><i class="fa fa-minus-square" style="color: beige"></i> Disable</button>
            <button class="btn btn-facebook" id="enableBtn"><i class="glyphicon glyphicon-check" style="color: beige" disabled></i> Enable</button>
        </div>
        <div class="col-md-4"></div>
    </div>
    <table id="adminTableDb" class="table table-hover table-striped table-bordered display">
        <thead style="background-color: #5d5d96">
            <tr>
                <th style="text-align: center; width: 45px"><i class="glyphicon glyphicon-check"></i></th>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Username</th>
                <th scope="col">Role</th>
                <th scope="col">Status</th>
                <th scope="col" width="130">Branch</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div class="modal fade" id="changeBranchModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog">
            <div class="modal-content" id="changeBranchModelContent">
            </div>
        </div>
    </div>
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            //ensures tables are loaded once during page lifetime as DataTables yields error after 1 initialization
            //array to stores users to be edited

            var userIDs = [];
            var userEnable = [];
            var countNxtTbl = 0;
            var count = 0;
            var globalTbl;
            var adTable;

            //ensures at start tables are hidden
            $("#AdRow").hide();
            $("#DbRow").hide();
            $("#delBtn").hide();
            $("#enableBtn").hide();

            //event that listens for a click and hides the current table and shows the intended
            $("#addAdBtn").on('click',
                function() {

                    $("#DbRow").hide();
                    $("#AdRow").toggle();
                    if (count == 0) {
                        globalTbl = $("#adminTableAD").DataTable({
                            "ajax": {
                                "url": siteURL + "/AdUsers/GetAdUsers",
                                "data": "GET",
                                "datatype": "json"
                            },
                            "columns": [
                                { "data": "Name" },
                                { "data": "Email" },
                                { "data": "Username" },
                                { data: "BranchesId" },
                                { "data": "Role" }
                            ]
                        });
                    }
                    count++;

                });

            //implementation for Database DataTable
            $("#editFromDb").on('click',
                function() {
                    $("#AdRow").hide();
                    $("#DbRow").toggle();

                    if (countNxtTbl == 0) {
                        adTable = $("#adminTableDb").DataTable({
                            "ajax": {
                                "url": siteURL + "/AdUsers/GetDbUsers",
                                "data": "GET",
                                "datatype": "json"
                            },
                            "columns": [
                                {
                                    "data": "Id",
                                    render: function(data, type, user) {
                                        var checkBox =
                                            `<input type="checkbox" class="selectUser" uname-attr="${user.Username
                                                }" value="${data
                                                }" id="${data}">`;
                                        return checkBox;
                                    }
                                },
                                { "data": "Name" },
                                { "data": "Email" },
                                { "data": "Username" },
                                { "data": "Role" },
                                {
                                    "data": "IsDisabled",
                                    render: function(data, type, row) {
                                        if (data == true) {
                                            return "Inactive";
                                        }
                                        if (data == false)
                                            return "Active";

                                    }
                                },
                                {
                                    data: "Branches.Branch",
                                    "render": function(data, type, user) {
                                        var actionBtns =
                                            `<button class="btn btn-circle editBranchModal" btn-uname-attr="${
                                                user.Username}" style="color: green" data-userId=${
                                                user.Id}>
                                                                   <i class="glyphicon glyphicon-pencil"></i></button>`;

                                        return actionBtns + "<i>" + data + "</i>";
                                    }
                                }
                            ],
                            "createdRow": function(row, data, dataIndex) {
                                if (data.IsDisabled == true) {
                                    $(row).css({ "opacity": "0.5", "background-color": "#ffffff", "color": "red" });
                                };
                            }

                        });
                    }

                    countNxtTbl++;
                });

            $("#addToDbBtn").on('click',
                function() {
                    bootbox.confirm("You are about to add users from the given table to your database. Continue?",
                        function(result) {
                            if (result) {
                                if (globalTbl.data().any()) {
                                    $.ajax({
                                        url: siteURL + '/AdUsers/SaveAdUsers',
                                        success: function() {
                                            toastr.success("Accepted",
                                                "Users Saved to the database",
                                                { positionClass: "toast-bottom-right" });

                                            //removes row from client side perspective. Not on server side thus
                                            //console.log(table.data().count());
                                            globalTbl.clear().draw();
                                            $("#addToDbBtn").attr("disabled", true);
                                            setTimeout(function() {
                                                    location.reload();
                                                },
                                                1000);

                                        },
                                        statusCode: {
                                            404: function(content) {
                                                alert('cannot find resource');
                                            },
                                            500: function(content) {
                                                alert('internal server error');
                                            }
                                        }
                                    });
                                } else {
                                    bootbox.alert({
                                        message: "<label style='color: red'>Cannot save to database if no data exist!<label>",
                                        size: 'small',
                                        className: 'rubberBand animated'
                                    });

                                }
                            }
                        });

                });

            //----------------------------------listens for checks and unchecks------------------------------------
            $("#adminTableDb").on("change",
                ".selectUser",
                function() {
                    //gets value to be enabled
                    if ($(this).prop("checked") && $(this).closest('tr').find('td:eq(5)').text() == "Inactive") {
                        userEnable.push($(this).val());

                        $("#enableBtn").show();
                        $("#delBtn").hide();
                    }
                    //get values to be disabled
                    if ($(this).prop("checked") && $(this).closest('tr').find('td:eq(5)').text() == "Active") {
                        var currUser = $("#uname").attr('data-username');
                        if (currUser.includes($(this).attr('uname-attr'))) {
                            toastr.error("Cannot include yourself", "Error", { positionClass: "toast-bottom-right" });
                            $(this).prop("checked", false);
                        }

                        userIDs.push($(this).val());
                        //alert(userIDs);
                        $("#delBtn").show();
                        $("#enableBtn").hide();
                    }

                    //listens for unchecks and removes the value from the array
                    if (!($(this).prop("checked")) && $(this).closest('tr').find('td:eq(5)').text() == "Active") {
                        var remove = $(this).val();

                        userIDs = userIDs.filter(function(val, index, arr) {
                            return val !== remove;

                        });

                        if (userIDs.length == 0) {
                            $("#delBtn").hide();
                        }

                    }

                    //does the same as the above except only for for those inactive rows
                    if (!($(this).prop("checked")) && $(this).closest('tr').find('td:eq(5)').text() == "Inactive") {
                        var delVal = $(this).val();

                        userEnable = userEnable.filter(function(val, index, arr) {
                            return val !== delVal;

                        });

                        if (userEnable.length == 0) {
                            $("#enableBtn").hide();
                        }

                    }
                    //alert(userIDs.toString());
                });

            //----------------------------Handler for disabling buttons--------------------------------------------
            $('#delBtn').on("click",
                function() {

                    bootbox.confirm("You are about to disable <strong>" + userIDs.length + "</strong> user/s.",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    type: "POST",
                                    url: siteURL + "/AdUsers/DeleteUser",
                                    data: { function_param: JSON.stringify(userIDs) },
                                    success: function(response) {
                                        if (response.success == true) {
                                            toastr.success("User successfully deleted",
                                                "Action Complete",
                                                { positionClass: "toast-bottom-right" });
                                            setTimeout(function() {
                                                    location.reload();
                                                },
                                                1000);
                                            /*$(".selectUser").each(function (index) {
                                                console.log(index);
                                                if ($(this).prop("checked")) {
                                                    adTable.row($(this).prop('checked', false)).draw();
                                                    adTable.row($(this).parents('tr').css({
                                                        "opacity": "0.5",
                                                        "background-color": "#ffffff"
                                                    })).draw();
                                                }
                                            });*/

                                            userIDs = [];

                                        } else {
                                            toastr.error("Error",
                                                "An error occured during the request. Refresh page and try again",
                                                { positionClass: "toast-bottom-right" });
                                        }

                                    }
                                });
                            }
                        });

                });

            //-----------------------------Enable user-------------------------------------------------------------
            $('#enableBtn').on("click",
                function() {
                    //alert(userEnable.length);
                    bootbox.confirm("Are you sure you want to re-enable user/s? Count: <strong> " +
                        userEnable.length +
                        "</strong>",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    type: "POST",
                                    url: siteURL + "/AdUsers/ReEnableUser",
                                    data: { function_param: JSON.stringify(userEnable) },
                                    success: function(response) {
                                        if (response.success == true) {
                                            toastr.success("User successfully re-enabled",
                                                "Action Complete",
                                                { positionClass: "toast-bottom-right" });
                                            setTimeout(function() {
                                                    location.reload();
                                                },
                                                1000);

                                            userEnable = [];

                                        } else {
                                            toastr.error("Error",
                                                "An error occured during the request. Refresh page and try again",
                                                { positionClass: "toast-bottom-right" });
                                        }

                                    }
                                });
                            }
                        });

                });

            //-------------------------------Modal for editing user branch------------------------------------------
            $("#adminTableDb").on("click",
                ".editBranchModal",
                function() {
                    var currUser = $("#uname").attr('data-username');
                    var uname = $(this).attr("btn-uname-attr");

                    if (currUser.includes(uname)) {
                        toastr.error(
                            "Sorry! Cannot change your own branch. Kindly see that another admin carries this out.",
                            "Error",
                            { positionClass: "toast-bottom-right" });
                    } else {
                        var id = $(this).attr("data-userId");
                        var url = siteURL + "/AdUsers/ChangeBranch/" + id;

                        $('#changeBranchModelContent').load(url);
                        $('#changeBranchModal').modal('show');
                    }


                });
        });
    </script>
}