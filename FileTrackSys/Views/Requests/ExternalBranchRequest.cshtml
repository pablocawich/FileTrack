
@{
    ViewBag.Title = "ExternalBranchRequest";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>External Requests</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<div class="row">
    <table id="externalBranchPendingTable" class="table table-hover">
        <thead>
            <tr>
                <th>File Number</th>
                <th>Volume No.</th>
                <th>Requester</th>
                <th>Requester Branch</th>
                <th>Requested Date</th>
                <th width="150" style="text-align: center">Action</th>
            </tr>
        </thead>
    </table>
    <div class="modal fade" id="extBranchModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog">
            <div class="modal-content" id="extBranchModelContent">
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {
            //gets json objects from the request controller in order to populate the dataTable
            var table = $("#externalBranchPendingTable").DataTable({
                "ajax": {
                    "url": siteURL + "/Requests/GetExternalBranchPendingFiles",
                    "data": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "FileVolumes.FileNumber",
                        render: function(data, type, req) {
                            return `<a href="#" data-ext-branch-id="${req.FileVolumes.FileId}" 
                                    class="btn btn-default btn-sm extBranchModal-js"><i class="fa fa-wpforms">${data
                                }</i></a>`;
                        }
                    },
                    {
                        "data": "FileVolumes.Volume",
                        render: function(data) {
                            return `<strong>Vol. ${data}</strong>`
                        }
                    },
                    {
                        "data": "User.Name",
                        render: function(data) {
                            return `<i class="fa fa-user"> <strong>${data}</strong> </i>`;
                        }
                    },
                    {
                        "data": "User.Branches.Branch",
                        render: function(data) {
                            return `<i class="fa fa-map-marker"> ${data} </i>`;
                        }
                    },
                    {
                        data: "RequestDate",
                        "render": function(data) {
                            return getDateString(data);
                        }
                    },
                    {
                        data: "Id",
                        "render": function(data, type, req) {
                            var buttonAccept =
                                `<a id-ext-attr="${data}" user-branch-acc="${req.User.Branches.Branch
                                }" uname-attr="${req.User.Name}" class="btn btn-sm js-ext-accept">
                                <i class='fa fa-check-circle'></i> Checkout</a>`;
                            var buttonReject =
                                `<a id-ext-rej-attr="${data}" style="color: red" user-branch-rej="${req.User.Branches.Branch
                                    }" uname-rej-attr="${req.User.Name
                                    }" class="btn btn-sm js-ext-reject"><i class="fa fa-times-circle"></i> Reject</a>`;
                            return buttonAccept + buttonReject;
                        }
                    }
                ]
            });

            $("#externalBranchPendingTable").on('click',
                '.js-ext-accept',
                function() {
                    var button = $(this);
                    var username = $(this).attr('uname-attr');
                    var userBranch = $(this).attr('user-branch-acc');
                    var id = $(this).attr('id-ext-attr');

                    bootbox.confirm({
                        message: `You are about to accept an external request from the <strong>${userBranch
                            }</strong> branch
                                   </br>Request made by <strong> ${username} </strong>`,
                        title: "<strong style='color: green'>CHECKOUT (EXTERNAL)</strong>",
                        callback: function(result) {
                            if (result) {
                                $.ajax({
                                    url: siteURL + '/Requests/AcceptExternalUserRequest/' + id,
                                    success: function(response) {
                                        if (response.success && response.opt == 2) {
                                            toastr.success(response.message,
                                                "Accepted",
                                                { positionClass: "toast-bottom-right" });
                                            //removes table row in real time
                                            table.row(button.parents('tr')).remove().draw();
                                        } else if (response.success && response.opt == 1) {
                                            bootbox.alert({
                                                size: "medium",
                                                title: "Success",
                                                message: response.message + ". Reload required.",
                                                callback: function() {
                                                    location.reload();
                                                }
                                            });
                                        } else if (!response.success) {
                                            toastr.success(response.message,
                                                "Oops!",
                                                { positionClass: "toast-bottom-right" });
                                        }

                                    },
                                    statusCode: {
                                        404: function(content) {
                                            alert('cannot find resource');
                                        },
                                        500: function(content) {
                                            alert('internal server error');
                                        }
                                    }
                                });
                            }
                        }
                    });
                });

            $("#externalBranchPendingTable").on('click',
                '.js-ext-reject',
                function() {
                    var button = $(this);
                    var userBranch = $(this).attr('user-branch-rej');
                    var username = $(this).attr('uname-rej-attr');
                    var id = $(this).attr('id-ext-rej-attr');

                    bootbox.confirm({
                        message: `You are about to deny an external request from branch: <strong>${userBranch}</strong>
                                </br> User: <strong> ${username}</strong>`,
                        title: "<strong style='color: red'>DENY (EXTERNAL)</strong>",
                        callback: function(result) {
                            if (result) {
                                $.ajax({
                                    url: siteURL + '/Requests/DeclineRequest/' + id,
                                    success: function(response) {
                                        if (response.success)
                                            toastr.success("This request has been declined",
                                                "Request Declined",
                                                { positionClass: "toast-bottom-right" });
                                        else
                                            toastr.error("It appears this request has already been processed",
                                                "Something went wrong",
                                                { positionClass: "toast-bottom-right" });
                                        table.row(button.parents('tr')).remove().draw();
                                    },
                                    statusCode: {
                                        404: function(content) {
                                            alert('cannot find resource');
                                        },
                                        500: function(content) {
                                            alert('internal server error');
                                        }
                                    }
                                });
                            }
                        }
                    });
                });

            function getDateString(date) {
                var dateObj = new Date(parseInt(date.substr(6)));
                return dateObj.toLocaleString();
            }

            $("#externalBranchPendingTable").on("click",
                ".extBranchModal-js",
                function() {
                    var id = $(this).attr("data-ext-branch-id");
                    var url = siteURL + "/Files/FileDetailsForConfirm/" + id;
                    // alert(url);

                    $('#extBranchModelContent').load(url);
                    $('#extBranchModal').modal('show');
                });

        });
    </script>
}