@using FileTracking.Models

@{
    ViewBag.Title = "PendingFiles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>Pending Files</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<p id="showCount"></p>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<div class="row">
    <div class="col-lg-12">
        <table id="pendingTable" class="table table-striped table-bordered table-hover">
            <thead>
            <tr>
                <th><i class="fa fa-address-book"></i> File Number</th>
                <th><i class="fa fa-volume-up"></i> Volume No.</th>
                <th><i class="fa fa-user-circle"></i> Requester User</th>
                <th><i class="fa fa-map-pin"></i> User Branch</th>
                <th><i class="fa fa-calendar"></i> Requested Date</th>
                <th>Action</th>
            </tr>
            </thead>
        </table>
    </div>
    <div class="modal fade" id="pendingFilesModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog">
            <div class="modal-content" id="pendingFilesModelContent">
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {
            //gets json objects from the request controller in order to populate the dataTable
            var table = $("#pendingTable").DataTable({
                "ajax": {
                    "url": siteURL+"/Requests/GetPendingFiles",
                    "data": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "FileVolumes.FileNumber",
                        render: function (data, type, req) {
                            var button = `<a data-fileId=${req.FileVolumes.FileId} class="btn btn-link pendingFilesModal">
                                        <i class="glyphicon glyphicon-file"></i> ${data}</a>`;
                            return button;
                        }
                    },
                    {
                        "data": "FileVolumes.Volume",
                        render: function (data) { return `<strong>${data}</strong>`;}
                    },
                    {
                        "data": "User.Name",
                        render: function (data) { return `<strong><i>${data}</i></strong>`; }
                    },
                    {
                        "data": "User.Branches.Branch",
                        render: function (data) { return `<strong><i>${data}</i></strong>`; }
                    },
                    {
                        data: "RequestDate",
                        "render": function(data) {
                            return `<strong><i>${getDateString(data)}</i></strong>`;
                        }
                    },
                    {
                        data: "Id",
                        "render": function(data, type, req) {
                            var buttonAccept = `<button class='btn btn-success btn-xs js-accept' data-accept-pending-id='${data}'
                                                user-attr='${req.User.Name}'><i class="fa fa-check"></i> Check out</button>`;
                            var buttonDeny = `<button class='btn btn-danger btn-xs js-reject' data-deny-pending-id='${data}'
                                               ><i class="fa fa-close"></i> Reject</button>`;

                            return buttonAccept + " | " + buttonDeny;
                        }
                    }
                ]
            });
            //--------------accepting file volume implementation----------------------------------
            $("#pendingTable").on("click",
                '.js-accept',
                function() {
                    var button = $(this);
                    var id = button.attr("data-accept-pending-id");
                    var requester = button.attr("user-attr");
                    bootbox.confirm("You are about to accept request for: <strong>"+requester+"</strong>",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: siteURL+'/Requests/AcceptRequest/' + id,
                                    success: function(response) {
                                        if (response.success == true) {
                                            toastr.success(response.message, "Accepted", { positionClass: "toast-bottom-right" });

                                            table.row(button.parents('tr')).remove().draw();                                       
                                        }
                                        else if (response.success == false) {
                                            bootbox.alert({
                                                closeButton: false,
                                                size: "small",
                                                title: "<strong style='color: green'>SUCCESS</strong>",
                                                message: "Request accepted however, other requests were found for this file and now requires a reload",
                                                callback: function () {
                                                    location.reload();
                                                }
                                            });
                                        } else if (response.success == false && response.opt == 2) {
                                            bootbox.alert({
                                                closeButton: false,
                                                size: "medium",
                                                title: "<strong style='color: green'>SUCCESS</strong>",
                                                message: response.message + ". Reload required.",
                                                callback: function () {
                                                    location.reload();
                                                }
                                            });
                                        }
                                    },
                                    statusCode: {
                                        404: function(content) {
                                            alert("404, page not found");
                                        },
                                        500: function(content) {                                           
                                            alert('internal server error');
                                        }
                                    }
                                });
                            }

                        });
                });

            $("#pendingTable").on("click",
                '.js-reject',
                function() {
                    var button = $(this);
                    var id = button.attr("data-deny-pending-id");
                    bootbox.confirm("You are about to decline request from user: ",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: siteURL+'/Requests/DeclineRequest/' + id,
                                    success: function(data) {
                                        toastr.success("Successfully Declined",
                                            "Request",
                                            { positionClass: "toast-bottom-right" });
                                        table.row(button.parents('tr')).remove().draw();
                                        if (table.data().count() == 0) {
                                            $("#notifIcon").css('color', 'white');
                                        }
                                    },
                                    statusCode: {
                                        404: function(content) { alert('cannot find resource'); },
                                        500: function(content) { alert('internal server error'); }
                                    }
                                });
                            }
                        });

                });

            function getDateString(date) {
                var dateObj = new Date(parseInt(date.substr(6)));
                //dateObj.toLocaleDateString, dateObj.toDateString, toTimeString()
                return dateObj.toLocaleString();
            }

            //file info modal initiation
            $("#pendingTable").on("click",
                ".pendingFilesModal",
                function () {
                    var id = $(this).attr("data-fileId");
                    var url = siteURL + "/Files/FileDetailsForConfirm/" + id;
                    // alert(url);

                    $('#pendingFilesModelContent').load(url);
                    $('#pendingFilesModal').modal('show');
                });

        });
    </script>
}
