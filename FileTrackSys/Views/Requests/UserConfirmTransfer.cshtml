
@{
    ViewBag.Title = "UserConfirmTransfer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>Confirm User Transfer</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<div class="row">
    <table id="userTransferConfirm" class="table table-striped table-hover" style="width: 100%">
        <thead>
        <tr>
            <th>File Number</th>
            <th>Volume</th>
            <th>Transfer From</th>
            <th>Branch</th>
            <th>Request date</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<div class="modal fade" id="confirmTransferModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
    <div class="modal-dialog">
        <div class="modal-content" id="confirmTransferModelContent">
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {
            //initiating dataTable
            var confirmTransferTable = $("#userTransferConfirm").DataTable({
                "ajax": {
                    "url": siteURL + "/Requests/GetConfirmationTransfers",
                    "data": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "FileVolumes.FileNumber",
                        render: function(data, type, req) {
                            var button = `<a href="#" data-fileId=${req.FileVolumes.FileId} 
                                        class="glyphicon glyphicon-file btn btn-default btn-sm confirmTransferModal">${
                                data}</a>`;

                            return button;
                        }
                    },
                    { "data": "FileVolumes.Volume" },
                    {
                        "data": "UserRequestedFrom.Name",
                        render: function(data) {
                            if (data == null)
                                return "Invalid User";
                            return data;
                        }
                    },
                    { "data": "RequesterBranch.Branch" },
                    {
                        data: "RequestDate",
                        "render": function(data) {
                            return getDateString(data);
                        }
                    },
                    {
                        data: "Id",
                        "render": function(data, type, req) {
                            //req.User.Name -> is requesting user not the user who made the transfer or 
                            //from whom the transfer was requested from
                            var buttonAccept =
                                `<button class='btn btn-info btn-circle btn-sm js-confirmBtn' data-prevUser='${
                                req.UserRequestedFrom.Name}' data-confirm-reqId='${
                                    data}' data-acc-user='${req.User.Name}'><i class='fa fa-check'></i></button>`;

                            return buttonAccept;
                        }
                    }
                ]
            });
            //Button event listener
            $("#userTransferConfirm").on('click',
                '.js-confirmBtn',
                function() {
                    var btn = $(this);
                    var previousUser = btn.attr('data-prevUser');
                    var reqId = btn.attr('data-confirm-reqId');
                    bootbox.confirm(
                        `You are confirming the handling of this file from: <strong>${previousUser
                        }</strong> . Are you sure?`,
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: siteURL + '/Requests/OnConfirmAccept/' + reqId,
                                    success: function(response) {
                                        if (response.success)
                                            toastr.success(response.message + '. File received from ' + response.from,
                                                "Transfer",
                                                { positionClass: "toast-bottom-right" });
                                        else
                                            toastr.error(response.message,
                                                "Transfer",
                                                { positionClass: "toast-bottom-right" });

                                        //console.log(tableTransfer);
                                        confirmTransferTable.row(btn.parents('tr')).remove().draw();
                                    },
                                    statusCode: {
                                        404: function(content) { alert('cannot find resource'); },
                                        500: function(content) { alert('internal server error'); }
                                    }
                                });
                            }

                        });
                });

            //file number link to modal
            $("#userTransferConfirm").on("click",
                ".confirmTransferModal",
                function() {
                    var id = $(this).attr("data-fileId");
                    var url = siteURL + "/Files/FileDetailsForConfirm/" + id;
                    // alert(url);

                    $('#confirmTransferModelContent').load(url);
                    $('#confirmTransferModal').modal('show');
                });

            //c# to JS --> readable DateTime conversion
            function getDateString(date) {
                var dateObj = new Date(parseInt(date.substr(6)));
                return dateObj.toDateString();
            }
        });
    </script>
}
