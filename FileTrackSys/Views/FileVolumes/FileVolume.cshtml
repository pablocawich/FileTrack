@model FileTracking.ViewModels.VolumesViewModel
@{
    ViewBag.Title = "FileVolume";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>File Volume</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>
<p id="thisUser" data-this-user="@Model.AdUser.Id" hidden></p>
<div class="row">
    <p style="color: chocolate"><i>Volumes listed here are for the file record below:</i></p>
    <div class="col-lg-4">
        <ul class="list-group">
            <li class="list-group-item">
                <span class="badge"><i class="fa fa-list-alt"></i></span>
                <strong>File Number:</strong> @Model.File.FileNumber
            </li>
            <li class="list-group-item">
                <span class="badge"><i class="fa fa-user"></i></span>
                <strong> Client:</strong> @Model.File.FirstName @Model.File.MiddleName @Model.File.LastName
            </li>
            <li class="list-group-item">
                <span class="badge"><i class="fa fa-volume-up"></i></span>
                <strong>Volume's Total: </strong>@Model.File.Volume
            </li>
        </ul>
    </div>
    <table id="volumeTable" class="table  table-bordered table-hover">
        <thead>
            <tr class="row100 head">
                <th>Volume</th>
                <th><i class="glyphicon glyphicon-comment"></i> Comment</th>
                <th><i class="fa fa-ellipsis-h"></i> State</th>
                <th><i class="glyphicon glyphicon-home"></i> Location Origin</th>
                <th><i class="glyphicon glyphicon-map-marker"></i> Current location</th>
                <th><i class="glyphicon glyphicon-user"></i> Holding user</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var fileVol in Model.FileVolumes)
            {
                <tr>
                    <td>@fileVol.Volume</td>
                    @if (fileVol.Comment == null)
                    {
                        <td>Empty</td>
                    }
                    else
                    {
                        <td>@fileVol.Comment</td>
                    }
                    <td class="tdState">@fileVol.States.State</td>
                    <td>@fileVol.Branches.Branch</td>
                    <td>@fileVol.CurrentLocation.Branch</td>
                    @if (@fileVol.AdUserId == null)
                    {
                        <td>At registry</td>
                    }
                    else
                    {
                        <td>@fileVol.AdUser.Username</td>
                    }

                        <td class="tdBtn">
                            <button type="button" vol-state="@fileVol.States.Id" user-loc="@Model.AdUser.BranchesId" originLoc="@fileVol.BranchesId" currLoc-attr="@fileVol.CurrentLocation.Id"
                                    vol-data-id="@fileVol.Id" file-name="@Model.File.FirstName" location="@fileVol.Branches.Branch" class="btn btn-dropbox js-req-vol">
                                <i class="glyphicon glyphicon-new-window"></i>
                            </button>
                            <button type="button" class="btn btn-bitbucket js-transfer-vol" original-Loc="@fileVol.BranchesId" my-loc="@Model.AdUser.BranchesId"
                                    data-vol-id="@fileVol.Id" data-current-loc="@fileVol.CurrentLocationId" data-state="@fileVol.StatesId" data-holdingUser="@fileVol.AdUserId">
                                <i class="glyphicon glyphicon-paste"></i></button>
                        </td>

                </tr>
            }
        </tbody>
    </table>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {

            $("#volumeTable").on("click",
                ".js-req-vol",
                function() {
                    var button = $(this);
                    var fileLocName = button.attr('location');
                    var state = button.attr("vol-state");
                    var originalLoc = button.attr("originLoc");//vol branch origin => e.g. 5
                    var currentLoc = button.attr("currLoc-attr");//vol current loc Id => e.g. 5
                    var userLoc = button.attr("user-loc");//gets user in session's branch Id => e.g. 5

                    //------------------------------the above retrieves attributes necessary for routing ----------
                    if (state != 1) { //1 => stored. So if NOT stored
                        toastr.error(
                            "Volume CANNOT be requested. Currently being transferred or has already been checked-out",
                            "Volume Request",
                            { positionClass: "toast-bottom-right" });
                        $(this).prop("disabled", true);
                    } else { //we are in stored
                        if (userLoc != currentLoc && currentLoc == originalLoc) {//External
                            bootbox.confirm({
                                title: "<strong>EXTERNAL REQUEST</strong>",
                                message:
                                    `<p style='color: #905abf'>This volume is outside your branch. Your request will be sent to <strong>${
                                        fileLocName} Registry</strong> for approval.</p>`,
                                buttons: {
                                    confirm: {
                                        label: 'Continue',
                                        className: 'btn-success'
                                    },
                                    cancel: {
                                        label: 'Cancel',
                                        className: 'btn-danger'
                                    }
                                },
                                callback: function(result) {
                                    if (result) {
                                        //write code tht routes volumes id to an action result in volumes controller.
                                        window.location.href =
                                            siteURL + "/Requests/Index/" + button.attr("vol-data-id");
                                    }
                                }
                            });

                        } else {
                            if (originalLoc == currentLoc && userLoc == currentLoc) {//internal
                                    bootbox.confirm({
                                        title: "<strong>LOCAL REQUEST</strong>",
                                        message:
                                            `<p style='color: #21a6e8'>File is within branch vicinity thus if you proceed your request will be sent to your <strong>local registry</strong> and you must await approval</p>`,
                                        buttons: {
                                            confirm: {
                                                label: 'Accept',
                                                className: 'btn-success'
                                            },
                                            cancel: {
                                                label: 'Cancel',
                                                className: 'btn-danger'
                                            }
                                        },
                                        callback: function(result) {
                                            if (result) {
                                                //write code tht routes volumes id to an action result in volumes controller
                                                // window.location.href = "/FileVolumes/RequestFile/" + button.attr("data-request-file-id");
                                                window.location.href =
                                                    siteURL + "/Requests/Index/" + button.attr("vol-data-id");
                                            }
                                        }
                                    });
                            }
                        }
                    }

                });

            var thisUser = $("#thisUser").attr("data-this-user"); //holds the id of the user in session
            //user file transfer button functionality 
            $("#volumeTable").on("click",
                ".js-transfer-vol",
                function() {
                    var btn = $(this);
                    var state = btn.attr("data-state");
                    var currentLoc = btn.attr("data-current-loc");
                    var holdingUser = btn.attr("data-holdingUser");
                    var myLoc = btn.attr("my-loc");
                    var originLoc = btn.attr("original-Loc");
                    var volId = btn.attr("data-vol-id");

                    //the val 5 represents the CHECKED OUT state in our db
                    //(&& currentLoc == originLoc) we removed this line from the if to enable foreign transfers
                    if (state == 5 && holdingUser != "" && currentLoc == myLoc) {
                        //ensures user cannot send request to his/herself
                        if (thisUser != holdingUser) {
                            var holdingUsername = btn.parent().siblings().eq(5).text();

                            bootbox.confirm({
                                message: "You are requesting a user file transfer from <strong>" +
                                    holdingUsername.toUpperCase() +
                                    "</strong>. Are you sure?",
                                buttons: {
                                    confirm: {
                                        label: 'Accept',
                                        className: 'btn-success'
                                    },
                                    cancel: {
                                        label: 'Cancel',
                                        className: 'btn-danger'
                                    }
                                },
                                callback: function(result) {
                                    if (result) {
                                        //Requests/OnUserTransferAccept/{volId}/{userId}/{currentLocation}
                                        window.location.href =
                                            siteURL +
                                            `/Requests/OnUserTransferRequest/${volId}/${holdingUser}/${currentLoc}`;
                                    }
                                }
                            });
                        } else
                            toastr.error("Cannot make a request to oneself",
                                "Sorry!",
                                { positionClass: "toast-bottom-right" });


                    } else
                        toastr.error("Not eligible for this at the moment",
                            "Oops!",
                            { positionClass: "toast-bottom-right" });
                });
        });

    </script>
}
