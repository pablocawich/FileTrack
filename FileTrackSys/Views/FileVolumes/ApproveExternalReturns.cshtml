@{
    ViewBag.Title = "ApproveExternalReturns";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>External Return Approval</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <table id="extReturnsApprovalTable" class="table  table-bordered table-hover">
        <thead>
            <tr>
                <th>File Number</th>
                <th>Volume No.</th>
                <th>Requester</th>
                <th>Requester Branch</th>
                <th>Requested Date</th>
                <th>File Origins</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div class="modal fade" id="extReturnsModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true">
        <div class="modal-dialog">
            <div class="modal-content" id="extReturnsModelContent">
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {
            //gets json objects from the request controller in order to populate the dataTable
            var table = $("#extReturnsApprovalTable").DataTable({
                "ajax": {
                    "url": siteURL + "/FileVolumes/GetExternalApproveReturns",
                    "data": "GET",
                    "datatype": "json"
                },
                "columns": [
                    {
                        "data": "FileVolumes.FileNumber",
                        render: function(data, type, req) {
                            return `<a href="#" data-ext-returns-id="${req.FileVolumes.FileId
                                }" class="btn btn-default btn-sm btn-block extReturnsModal-js">
                                <i class="fa fa-address-book"> <strong>${data}</strong></i></a>`;
                        }
                    },
                    {
                        "data": "FileVolumes.Volume",
                        render: function(data) { return `<strong>Vol. ${data}</strong>`; }
                    },
                    {
                        "data": "User.Name",
                        render: function(data) {
                            return `<strong><i class="fa fa-user-circle-o"></i> ${data}</strong>`;
                        }
                    },
                    {
                        "data": "User.Branches.Branch",
                        render: function (data) {
                            return `<strong><i class="fa fa-location-arrow"></i> ${data}</strong>`;
                        }
                    },
                    {
                        data: "RequestDate",
                        "render": function(data) {
                            return getDateString(data);
                        }
                    },
                    {
                        "data": "RecipientBranch.Branch",//this is supposed to be File Branch origins - naming convention fault
                        render: function (data) {
                            return `<strong><i class="fa fa-map-marker"></i> ${data}</strong>`;
                        }
                    },
                    {
                        data: "Id",
                        "render": function(data, type, req) {

                            var extReturnButton =
                                `<a class='btn btn-xs js-ext-branch-return' request-user='${req.User.Name}' 
                                data-ext-return-id=${data} data-fileNO='${req.FileVolumes.FileNumber}'>
                                <i class="fa fa-check-square-o"></i> Check In</a>`;
                            return extReturnButton;
                        }
                    }
                ]
            });

            //--------------returning file volume to external branch (origin) implementation----------------------------------
            $("#extReturnsApprovalTable").on("click",
                '.js-ext-branch-return',
                function() {
                    var button = $(this);
                    var requestingUser = button.attr('request-user');
                    var id = button.attr("data-ext-return-id");
                    var fileNumber = button.attr("data-fileNO");

                    bootbox.confirm({
                        message: `You are accepting a check in of file:<strong> ${fileNumber
                            }<br></strong> from holder: <strong> ${requestingUser}</strong>`,
                        title: "<strong>CHECK IN</strong>",
                        callback: function(result) {
                            if (result) {
                                $.ajax({
                                    url: siteURL + '/FileVolumes/AcceptExternalReturn/' + id,
                                    success: function() {

                                        toastr.success("Accepted return for client",
                                            "Return",
                                            { positionClass: "toast-bottom-right" });

                                        //removes row from client side perspective. Not on server side thus 
                                        //if a refresh is made it will be reloaded since we have not done any server side processing
                                        table.row(button.parents('tr')).remove().draw();
                                    },
                                    statusCode: {
                                        404: function(content) { alert('cannot find resource'); },
                                        500: function(content) { alert('internal server error'); }
                                    }
                                });
                            }
                        }
                    });
                });

            function getDateString(date) {
                var dateObj = new Date(parseInt(date.substr(6)));
                return dateObj.toDateString();
            }

            //Modal event listener
            $("#extReturnsApprovalTable").on("click",
                ".extReturnsModal-js",
                function() {
                    var id = $(this).attr("data-ext-returns-id");
                    var url = siteURL + "/Files/FileDetailsForConfirm/" + id;

                    $('#extReturnsModelContent').load(url);
                    $('#extReturnsModal').modal('show');
                });
        });
    </script>
}
