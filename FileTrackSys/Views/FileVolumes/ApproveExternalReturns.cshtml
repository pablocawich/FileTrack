
@{
                /**/

                ViewBag.Title = "ApproveExternalReturns";
                Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css">
<div class="row">
    <div class="col-lg-12">
        <h2 class="page-header"><strong>External Return Approval</strong></h2>
    </div>
    <!-- /.col-lg-12 -->
</div>

<div class="row">
    <table id="extReturnsApprovalTable" class="table  table-bordered table-hover">
        <thead>
            <tr>
                <th>File Number</th>
                <th>Volume</th>
                <th>Requester</th>
                <th>Requester Branch</th>
                <th>Requested Date</th>
                <th>External Branch</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>

    </table>
</div>
@section scripts
{
    <script>
        $(document).ready(function() {
            //gets json objects from the request controller in order to populate the dataTable
            var table = $("#extReturnsApprovalTable").DataTable({
                "ajax": {
                    "url": "/FileVolumes/GetExternalApproveReturns",
                    "data": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": "FileVolumes.FileNumber" },
                    { "data": "FileVolumes.Volume" },
                    { "data": "User.Name" },
                    { "data": "User.Branches.Branch" },
                    {
                        data: "RequestDate",
                        "render": function(data) {
                            return getDateString(data);
                        }
                    },
                    {
                        "data": "RequesteeBranch",
                        "render": function (data) {
                            return determineBranch(data);
                        }
                    },
                    {
                        data: "Id",
                        "render": function(data, type, req) {

                            var extReturnButton =
                                `<button class='btn btn-success js-ext-branch-return' accepted-by='${req.AcceptedBy}' data-ext-return-id=${
                                    data}>Check In</button>`;
                            return extReturnButton;
                        }
                    }
                ]
            });
            //--------------returning file volume to external branch (origin) implementation----------------------------------
            $("#extReturnsApprovalTable").on("click",
                '.js-ext-branch-return',
                function() {
                    var button = $(this);
                    var externalUser = button.attr('accepted-by');
                    var id = button.attr("data-ext-return-id");
                    //var requesteeBranch = button.attr("requestee-branch");

                    var branchStr = button.parents("tr").find("td").eq(5).html();//we get the string returned from the external branch field
                    
                    bootbox.confirm("By checking in you are confirming that the file has returned and will now be stored",
                        function(result) {
                            if (result) {
                                $.ajax({
                                    url: '/FileVolumes/AcceptExternalReturn/' + id,
                                    success: function() {

                                        toastr.success("Accepted return for client","Return",{ positionClass: "toast-bottom-right" });

                                        //removes row from client side perspective. Not on server side thus 
                                        //if a refresh is made it will be reloaded since we have not done any server side processing
                                        table.row(button.parents('tr')).remove().draw();
                                    },
                                    statusCode: {
                                        404: function(content) { alert('cannot find resource'); },
                                        500: function(content) { alert('internal server error'); }
                                    }
                                });
                            }

                        });
                });
            function determineBranch(branchId) {
                var num = parseInt(branchId);
                switch (num) {
                case 1:
                    return "Corozal";
                case 2:
                    return "Orange Walk";
                case 3:
                    return "Belize City";
                case 4:
                    return "San Pedro";
                case 5:
                    return "Belmopan";
                case 6:
                    return "Dangriga";
                }
            };

            function getDateString(date) {
                var dateObj = new Date(parseInt(date.substr(6)));
                return dateObj.toDateString();
            }
        });
    </script>
}
